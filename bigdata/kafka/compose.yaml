version: "3.7"

services:
  kafka:
    image: bitnami/kafka:3.3.2
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: yes
    ports:
    - 9092:9092
    volumes:
    - kafka_data:/bitnami/kafka

  console:
    image: docker.redpanda.com/vectorized/console:v2.2.3
    environment:
      CONFIG_FILEPATH: /etc/kafka-console/config.yml
    ports:
    - 8080:8080
    volumes:
    - ./configs/console/:/etc/kafka-console/
    depends_on:
    - kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.1
    container_name: schema-registry
    hostname: schema-registry
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
    - 8081:8081
    depends_on:
    - kafka

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.3.1
    profiles: [ rest-proxy ]
    container_name: rest-proxy
    hostname: rest-proxy
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
    - 8082:8082
    depends_on:
    - kafka
    - schema-registry

  datagen:
    image: cnfldemos/kafka-connect-datagen:0.6.0-7.3.0
    profiles: [ datagen ]
    container_name: datagen
    hostname: datagen
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: datagen
      CONNECT_GROUP_ID: datagen
      CONNECT_CONFIG_STORAGE_TOPIC: _datagen.configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _datagen.offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _datagen.status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER:   org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
    - 8083:8083
    depends_on:
    - kafka
    - schema-registry

volumes:
  kafka_data:

networks:
  default:
    name: bookshelf
    external: true

## TODO
# linkedin/cruise-control + ui
# strimzi.io
## References:
# * https://github.com/debezium/container-images
